// Generated by CoffeeScript 1.6.2
(function() {
  exports.plugin = function() {
    var Permission;

    Permission = (function() {
      /*
        Permission Levels
      */
      Permission.R = 0;

      Permission.RW = 1;

      Permission.RWD = 2;

      Permission.SUPER = 3;

      /*
        Method: constructor
      
        @param - ownerResource <Object> - A mongoose
                 model instance that implements the
                 owner interface.
        @param - pLevel - A valid permission level.
      
                    Permission.R
                    Permission.RW
                    Permission.RWD
                    Permission.SUPER
      */


      function Permission(ownerResource, pLevel) {
        this._owner = ownerResource;
        this._pLevel = pLevel;
      }

      /*
        Method: serialize
      
        Creates a permission object consistent
        with the applications permission schema.
      
        TODO(chris): allow client to specify what
        serialize returns.
      */


      Permission.prototype.serialize = function() {
        var p;

        p = {
          _id: this._owner.id,
          l: this._pLevel
        };
        return p;
      };

      /*
        Equality methods
      */


      Permission.prototype.gt = function(pObj) {
        return this._pLevel > pObj.l;
      };

      Permission.prototype.gte = function(pObj) {
        return this._pLevel >= pObj.l;
      };

      Permission.prototype.lt = function(pObj) {
        return this._pLevel < pObj.l;
      };

      Permission.prototype.lte = function(pObj) {
        return this._pLevel <= pObj.l;
      };

      Permission.prototype.__defineGetter__('level', function() {
        return this._pLevel;
      });

      return Permission;

    })();
    return Permission;
  };

}).call(this);
